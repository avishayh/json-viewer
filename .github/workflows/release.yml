name: Release Pipeline

on:
  push:
    branches:
      - master

  workflow_dispatch:
  
permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build with npm
        run: |
          npm config set registry https://registry.npmjs.org/
          npm install
          VERSION=$(jq -r .version package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          npm run build

      - name: Prepare and deploy to gh-pages
        run: |
          set -e
          REPO_URL="https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          # Clone gh-pages branch into temp dir
          git clone --branch gh-pages --single-branch "$REPO_URL" gh-pages
          cd gh-pages

          # Read and increment version
          if [ -f version.json ]; then
            VERSION=$(jq -r .version version.json)
            NEW_VERSION=$((VERSION + 1))
          else
            NEW_VERSION=1
          fi
          echo "New version: $NEW_VERSION"

          # Backup /latest to /v/{version}
          if [ -d latest ]; then
            mkdir -p v/$NEW_VERSION
            rm -rf v/$NEW_VERSION/*
            cp -r latest/* v/$NEW_VERSION/
          fi

          # Copy new dist to /latest
          rm -rf latest
          mkdir latest
          cp -r ../dist/* latest/

          # Update version.json
          echo "{\"version\": \"$NEW_VERSION\"}" > version.json

          # Commit and push
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Release $NEW_VERSION" || echo "No changes to commit"
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      